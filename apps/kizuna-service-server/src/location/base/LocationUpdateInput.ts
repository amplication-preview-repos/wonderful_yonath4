/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsEnum,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { EnumLocationFeatures } from "./EnumLocationFeatures";
import { RatingUpdateManyWithoutLocationsInput } from "./RatingUpdateManyWithoutLocationsInput";
import { Type } from "class-transformer";
import { EnumLocationTypeField } from "./EnumLocationTypeField";

@InputType()
class LocationUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumLocationFeatures,
    isArray: true,
  })
  @IsEnum(EnumLocationFeatures, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumLocationFeatures], {
    nullable: true,
  })
  features?: Array<"Option1">;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  latitude?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  longitude?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  postalCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutLocationsInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutLocationsInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutLocationsInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutLocationsInput;

  @ApiProperty({
    required: false,
    enum: EnumLocationTypeField,
  })
  @IsEnum(EnumLocationTypeField)
  @IsOptional()
  @Field(() => EnumLocationTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;
}

export { LocationUpdateInput as LocationUpdateInput };
